openapi: 3.0.0
info:
  title: Social Network API
  description: API for Social Network services
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Proxy service endpoint
paths:
  /auth/signin:
    post:
      summary: Register a new user
      operationId: signIn
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
        '409':
          description: Username or email already exists
        '500':
          description: Internal server error
          
  /auth/login:
    post:
      summary: Login a user
      operationId: login
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error
  
  /auth/logout:
    post:
      summary: Logout a user and invalidate session
      operationId: logout
      tags:
        - auth
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Internal server error
          
  /users/profile:
    get:
      summary: Get full user profile information
      operationId: getUserProfile
      tags:
        - users
      security:
        - basicAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullProfile'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error
          
  /users/{username}:
    get:
      summary: Get reduced user profile information by username
      operationId: getUserPublicProfile
      tags:
        - users
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User public profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublicProfile'
        '404':
          description: User not found
        '500':
          description: Internal server error
          
  /users/update:
    put:
      summary: Update user profile information
      operationId: updateUserProfile
      tags:
        - users
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullProfile'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error
          
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    SignInRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
          maxLength: 100
    
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    
    AuthResponse:
      type: object
      properties:
        username:
          type: string
        message:
          type: string
        token:
          type: string
          description: Session token (only returned from login)
        expires_at:
          type: string
          format: date-time
          description: When the session expires
    
    UserFullProfile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        name:
          type: string
        surname:
          type: string
        birthdate:
          type: string
          format: date
        phone_number:
          type: string
    
    UserPublicProfile:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        surname:
          type: string
    
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        phone_number:
          type: string
